{
  "active": false,
  "connections": {
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Format Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Format Chain": {
      "main": [
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Evolution API3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Evolution API4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Evolution API5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis6": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis7": {
      "main": [
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait6": {
      "main": [
        [
          {
            "node": "Redis6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Redis9",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis9": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Format Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Redis7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Think1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields10": {
      "main": [
        [
          {
            "node": "Format Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If18": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File2": {
      "main": [
        [
          {
            "node": "OpenAI6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "Edit Fields13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields13": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields14": {
      "main": [
        [
          {
            "node": "Edit Fields15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "main": [
        [
          {
            "node": "Edit Fields18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields16": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields17": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI5": {
      "main": [
        [
          {
            "node": "Edit Fields19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields20": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI6": {
      "main": [
        [
          {
            "node": "Edit Fields21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields15": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields18": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields19": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields21": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API3": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API4": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Semantic Chunker": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Google Drive2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Google Drive1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Semantic Chunker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Disparador Instagram": {
      "main": [
        [
          {
            "node": "Responder webhook – Instagram (POST)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Responder webhook – Instagram (GET)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Responder webhook – Instagram (POST)": {
      "main": [
        [
          {
            "node": "Si no es echo – Instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Si no es echo – Instagram": {
      "main": [
        [
          {
            "node": "Editar campos – Instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis8": {
      "main": [
        [
          {
            "node": "Wait7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait7": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Redis10",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis10": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Editar campos – Instagram": {
      "main": [
        [
          {
            "node": "Redis8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Format Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Format Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields11": {
      "main": [
        [
          {
            "node": "Format Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "Edit Fields11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Format Chain1": {
      "main": [
        [
          {
            "node": "Instagram Graph API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Graph API": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Instagram Graph API1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Graph API1": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait5": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Graph API2": {
      "main": [
        [
          {
            "node": "Wait8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Instagram Graph API2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Instagram Graph API3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Graph API3": {
      "main": [
        [
          {
            "node": "Wait9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait8": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Instagram Graph API4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait9": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-03T19:09:35.217Z",
  "id": "2z8gySOWe7LBipgM",
  "isArchived": false,
  "meta": null,
  "name": "Chatbot IA MASTERS AUTO",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        5780,
        1240
      ],
      "id": "cc5d7fd0-055e-4d27-9544-ebe06268a186",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"response\": {\n    \"part_1\": \"Responde con la primera parte de la respuesta.\",\n    \"part_2\": \"Responde con la segunda parte de la respuesta.\",\n    \"part_3\": \"Responde con la tercera parte de la respuesta (opcional).\",\n    \"part_4\": \"Responde con la cuarta parte de la respuesta (opcional).\",\n    \"part_5\": \"Responde con la quinta parte de la respuesta (opcional).\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        5940,
        1440
      ],
      "id": "828b9480-fba8-4da5-a958-a5ea64925a15",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Respuesta a formatear:\n{{ $json.mensaje }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=# Tarea  \nTu función principal consiste en crear un JSON que contenga las diferentes partes importantes  del mensaje que vayas a recibir   \nNotas :  \n## debes seguir la siguiente estructura de JSON:  \n{\n  \"response\": {\n    \"part_1\": \"Responde con la primera parte de la respuesta.\",\n    \"part_2\": \"Responde con la segunda parte de la respuesta.\",\n    \"part_3\": \"Responde con la tercera parte de la respuesta (opcional).\",\n    \"part_4\": \"Responde con la cuarta parte de la respuesta (opcional).\",\n    \"part_5\": \"Responde con la quinta parte de la respuesta (opcional).\"\n  }\n}\n## debes dividir los mensajes de una manera que suene bien,  me explico debes analizar que tan largo es el mensaje que recibes y en base en eso dividir el mensaje en las partes que sean necesarias, por ejemplo si el mensaje es breve divídelo en 1 o 2 partes y si el mensaje es extenso divídelo en 3 o 4 partes   \n## las partes que dividas deben tener sentido, no dividas las partes por hacerlo, piensa 2 veces antes de hacerlo"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        5680,
        1020
      ],
      "id": "cdcfcf68-ba91-4bf9-879e-50a83784435f",
      "name": "Format Chain",
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8d46d583-b82d-4d85-a0b8-2c30006082a0",
              "leftValue": "={{ $('Format Chain').item.json.output.response.part_2 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6600,
        1220
      ],
      "id": "57bddddb-fb0e-4709-a6b5-f7303282e1e7",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3c7eb0e9-13ee-40d6-9738-057a02ac1306",
              "leftValue": "={{ $('Format Chain').item.json.output.response.part_3 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7280,
        1220
      ],
      "id": "4653beb6-2fad-4219-a508-5b82d8e9686b",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "10bc21c7-e460-458f-b0cb-d9e37e9bde8a",
              "leftValue": "={{ $('Format Chain').item.json.output.response.part_4 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7940,
        1220
      ],
      "id": "3159db23-adee-4698-95b6-7ff6bdf0228d",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3c7eb0e9-13ee-40d6-9738-057a02ac1306",
              "leftValue": "= {{ $('Format Chain').item.json.output.response.part_5 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "3bbae988-08d6-4635-b579-fc947cd8e502",
              "leftValue": "={{ $('Format Chain').item.json.output.response.part_5 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8580,
        1220
      ],
      "id": "cd5c85d0-2478-4859-a922-f3ff5d6448d6",
      "name": "If3"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Edit Fields').item.json.Whatsapp_number }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2740,
        1140
      ],
      "id": "2feaa5cc-1677-4bd7-bfc9-ae4c379531f8",
      "name": "Redis6"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.Whatsapp_number }}",
        "messageData": "={{ $json.mensaje }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2300,
        1140
      ],
      "id": "f0c8a97e-e958-43b4-b7d7-4cd0ef6f9a8d",
      "name": "Redis7"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2520,
        1140
      ],
      "id": "e03d23c6-0414-48c0-a8ba-245066f59e2d",
      "name": "Wait6",
      "webhookId": "a8d5702b-2fe2-4f23-bad7-8bf42fe80ee8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8a313a41-eadc-4ada-bc2a-feff79845de9",
              "leftValue": "={{ $json.message[0] }}",
              "rightValue": "={{ $('Edit Fields').item.json.mensaje }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2960,
        1140
      ],
      "id": "333499dc-4054-47b5-873d-362fe62702b6",
      "name": "If6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5f82380-4858-4361-908e-98e45c98f092",
              "name": "response",
              "value": "={{ $('Redis6').item.json.message.slice().reverse() }}",
              "type": "string"
            },
            {
              "id": "b3db797c-6f2b-4232-8e0c-021bc8e299ca",
              "name": "phone",
              "value": "={{ $('Edit Fields').item.json.Whatsapp_number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3180,
        1040
      ],
      "id": "999776df-a6a2-42f7-9da1-570aa0ff30b9",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Edit Fields').item.json.Whatsapp_number }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3400,
        1240
      ],
      "id": "293991aa-9604-4807-be5d-f49fa035d016",
      "name": "Redis9"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5660,
        1240
      ],
      "id": "f7996db7-7eec-4831-87cb-58527576e7e3",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5820,
        1440
      ],
      "id": "444a5c19-9ba2-4b0a-8755-b5bcc4e1a14d",
      "name": "OpenAI Chat Model2"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields2').item.json.phone }}",
        "tableName": "=public.n8n_chat_historial_bot",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4480,
        1220
      ],
      "id": "29bebb7e-0c09-4e2e-8513-6738f2e22801",
      "name": "Postgres Chat Memory"
    },
    {
      "parameters": {
        "content": "## Enviamos varios mensajes de un respuesta",
        "height": 680,
        "width": 3680,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5340,
        880
      ],
      "typeVersion": 1,
      "id": "3b6e39a6-39c9-4f49-aa17-86381648bf40",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Recopilamos mensajes en (x) intervalo de tiempo",
        "height": 680,
        "width": 1740,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1920,
        880
      ],
      "typeVersion": 1,
      "id": "29b8509e-9290-4743-96d0-b4d7aa4a435f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## ¿Audio, texto o imagen?",
        "height": 1080,
        "width": 1860,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        40,
        660
      ],
      "typeVersion": 1,
      "id": "e76ceab0-0a7d-48b7-82cf-8f5f7be72fd2",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=contexto: {{ $json.mensaje_usuario }}\nmensaje_del_cliente: {{ $('Merge').item.json.response }}\ntelefono_del_cliente: {{ $('Edit Fields2').item.json.phone }}\ndia actual: {{ $now }}\ndia de la semana: {{ $now.format('cccc') }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=## 🧠 Prompt para Agente de n8n: Comunidad IA Masters Automations + SolutechIA (con Supabase)\n\n---\n\n### 1. Tu Rol y Contexto\n\n**Rol:** Eres un Agente de Atención de la comunidad IA Masters Automations y embajador informativo de SolutechIA.  \n**Contexto:** Ayudarás a los usuarios que escriben por WhatsApp o mensajes directos, brindándoles información clara, precisa y motivadora sobre la comunidad y los servicios de SolutechIA.\n\nTu objetivo principal es:\n\n- Si tienen dudas sobre **la comunidad IA Masters Automations**, responder con claridad y entusiasmo, explicar beneficios, resolver dudas y **ofrecer siempre la prueba gratuita de 7 días** como la mejor forma de comenzar.  \n  ➕ *No hay permanencia, pueden irse cuando quieran. Si no les gusta, no tienen que pagar nada.*\n\n- Si preguntan sobre **servicios de automatización o desarrollos personalizados**, redirígelos a la web de SolutechIA para que dejen sus datos y agenden una reunión con nosotros.  \n  ➕ *Este CRM (Wixyn, potenciado con GoHighLevel) es ideal para empresas que quieren escalar y automatizar sus procesos.*\n\nTambién tienes acceso a una **base de datos vectorizada en Supabase** que contiene toda la información de la comunidad y SolutechIA. Debes consultarla antes de responder para asegurar la máxima precisión.\n\n---\n\n## 🌐 Páginas importantes\n\n- 📋 Solicitar presupuesto (automatizaciones para empresas): https://solutech.iamastersacademy.com/formulario  \n- 🧠 Web de SolutechIA: https://solutechia.es/  \n- 📦 CRM afiliados Wixyn: https://solutechia.es/crm  \n- 🧑‍🎓 Comunidad Skool IA Masters Automations: https://www.skool.com/ia-masters-automations/about\n\n---\n\n### 2. Responsabilidades y Tareas Clave\n\n- ✅ Consultar siempre la base de datos vectorizada en Supabase antes de responder.\n- ✅ Responder preguntas sobre la comunidad: niveles, beneficios, clases, cursos, automatizaciones, herramientas y funcionamiento general.\n- ✅ Redirigir correctamente:\n  - 👉 A SolutechIA si quieren automatizar su empresa.\n  - 👉 A Skool si quieren unirse a la comunidad (recuerda: 7 días gratis, sin permanencia).\n- ✅ Aclarar que usamos las 3 herramientas líderes en el mercado No-Code: **Make**, **N8N** y **GoHighLevel**.\n- ✅ Mencionar que damos **clases en directo** mostrando casos reales de empresas con automatizaciones internas.\n- ✅ Informar que existe una **bolsa de trabajo interna**, tanto para ofrecer como para solicitar automatizaciones.\n\n---\n\n### 3. Expectativa de Entrada\n\nEjemplos de preguntas que recibirás:\n\n- “¿Qué es SolutechIA?”\n- “¿Cómo accedo a la comunidad?”\n- “¿Tenéis clases sobre N8N?”\n- “¿Qué CRM usáis?”\n- “¿Esto es un bot?”\n\n---\n\n### 4. Herramientas Disponibles\n\n- ✅ Base de datos vectorizada en Supabase con embeddings de clases, documentos y respuestas.\n- ❌ No usas herramientas externas ni consultas sitios web públicos directamente.\n\n---\n\n### 5. Estilo y Tono de Conversación\n\n- Usa un tono **entusiasta, motivador, informal y cercano**.\n- Responde con claridad y energía, como si fueras parte del equipo humano.\n- Usa frases naturales y alegres, ejemplo:\n  > Súper buena pregunta! 😄 Mira, te explico cómo funciona 👇\n\n- Si preguntan si eres un bot, responde con humor, por ejemplo:\n  > Obvio que soy un bot! 😅 Automatizar es lo nuestro, no íbamos a escribir todo esto a mano... Pero que sepas que revisamos estas conversaciones con humanos para mejorar y asegurar que todo va bien.  \n  > De hecho, si quieres aprender a crear este bot, lo enseñamos dentro de la comunidad! 🤖✨\n\n---\n\n### 6. Formato y Salida Esperada\n\n- ✅ Optimiza para WhatsApp y mensajes directos.\n- ✅ Usa **mínimo 6 emojis** por mensaje (cuando aplique).\n- ✅ Incluye enlaces clicables cuando sea necesario.\n- ✅ Usa estructura tipo conversación, breve y clara.\n- ✅ No cierres con preguntas innecesarias.  \n  ➤ El objetivo no es alargar la charla, sino **resolver y redirigir**.\n\n---\n\n### 7. Consulta de Datos\n\n> 🔎 Antes de generar la respuesta, busca en la base de datos vectorizada de Supabase el fragmento más relevante.  \n> Responde en base a ese contenido. Si no encuentras nada útil, responde con la información general que contiene este prompt.\n\n---\n\n### 8. Instrucciones de Calidad y Validación\n\nCada respuesta debe:\n\n- ✅ Resolver la intención con precisión y empatía.\n- ✅ Incluir mínimo 6 emojis.\n- ✅ Contener enlaces relevantes (si aplica).\n- ✅ Ser clara, estructurada y cercana.\n- ✅ Redirigir correctamente según el caso.\n- ❌ No incluir precios ni condiciones económicas.\n- ❌ No forzar el cierre con preguntas de interacción.\n- ❌ No repetir información innecesaria.\n\n---\n\n### ❌ Prohibiciones\n\n- ❌ No improvises respuestas si no tienes datos.\n- ❌ No menciones precios, tarifas, ni promociones específicas.\n- ❌ No descripciones incompletas sobre niveles o servicios.\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        4500,
        1000
      ],
      "id": "0365d972-3b40-47d1-ac09-4a238b7d59da",
      "name": "AI Agent",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "content": "## 🧙‍♂️ El agente IA hace su magia",
        "height": 680,
        "width": 1540,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3720,
        880
      ],
      "typeVersion": 1,
      "id": "8b9e3415-efeb-44b0-9787-1a17e1c1f227",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3180,
        1240
      ],
      "id": "f5ca21a4-f8e5-4f25-8e58-ac22f34e794b",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7fe51594-8d61-45b4-a123-ed0c66d6f5c5",
              "name": "mensaje",
              "value": "={{ $json.message_content }}",
              "type": "string"
            },
            {
              "id": "3e61bb2b-a508-48c2-b55c-5d4f9a404cfb",
              "name": "Whatsapp_number",
              "value": "={{ $json.Whatsapp_number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2080,
        1140
      ],
      "id": "50703cbd-42e2-49cb-8af2-f8f2acb21a41",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"mensaje_respuesta\": { \"type\": \"string\" }\n  },\n  \"required\": [\"mensaje_respuesta\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        5000,
        1220
      ],
      "id": "daea93b3-a289-4fa8-9d78-f12b9840e2b8",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "jsCode": "const minutes = $json.minutes_since_last_message;\nlet mensaje = '';\n\nif (minutes > 60) {\n  mensaje = `Hace ${Math.floor(minutes / 60)} horas que el usuario no escribía.`;\n} else if (minutes > 5) {\n  mensaje = `El usuario vuelve luego de ${minutes} minutos.`;\n} else {\n  mensaje = `El usuario continúa la conversación activa.`;\n}\n\nreturn [\n  {\n    json: {\n      mensaje_usuario: mensaje\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4140,
        1000
      ],
      "id": "a8441efa-a1c8-4061-a3e7-26b566d1014d",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0c562218-3c6e-4775-b07d-18de456a5c19",
              "leftValue": "={{ $json.Conversacion }}",
              "rightValue": "",
              "operator": {
                "type": "dateTime",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3920,
        1000
      ],
      "id": "582d794f-faa2-46f4-82c0-baef62aa18b7",
      "name": "If9"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        3700,
        1000
      ],
      "id": "d8b34154-89f8-4bdc-b176-afceb6d3b6fb",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "764724e1-bf14-459b-bb97-70b999718c99",
              "name": "mensaje_usuario",
              "value": "Nueva conversación",
              "type": "string"
            },
            {
              "id": "5dc57e7c-35f5-4a74-b3ce-05c3b4a33854",
              "name": "ID",
              "value": "={{ $json.phone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4140,
        1200
      ],
      "id": "5cea74fb-9408-4bd9-a85a-8fad20403117",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4360,
        1220
      ],
      "id": "d022a467-ad34-4483-8bd1-d0f0259d8c1d",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "description": "=## 🧠 Prompt para el nodo Think (modo validador)\n\nTu función es actuar como una capa de pensamiento lógico y crítica antes de enviar la respuesta del agente. Siempre debes tomarte tu tiempo para razonar.\n\n- ❌ Nunca se puede inventar un precio.\n- ❌ No se puede suponer que un producto o servicio\n- ❌ No se puede decir \"te hago descuento\", \"te dejo en tanto\".\n\n---\n\n### ✅ Validar que:\n\n- La respuesta conteste con claridad, calidez y precisión a la intención del cliente.\n- Tenga mínimo **6 emojis bien distribuidos** (saludo, desarrollo, cierre).\n- No repita datos innecesarios.\n- Sea coherente con lo que el cliente pidió.\n- Mantenga el tono afectuoso y profesional característico del agente.\n\n---\n\n### 📤 Formato de salida (obligatorio):\n\nDevuelve siempre un JSON con esta estructura y nada más:\n\n{\n  \"valido\": true,\n  \"comentario\": \"Explicación breve del por qué es válido o qué debe corregirse.\"\n}\n\n📌 Si detectas cualquier error (tono, contenido, coherencia, emojis insuficientes, promesas indebidas, ingredientes no confirmados), devuelve `\"valido\": false` y explica por qué brevemente.\n\n🚫 No devuelvas el mensaje validado. No repitas el contenido. Solo responde con el JSON indicado.\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        4600,
        1220
      ],
      "id": "3c4cc825-b934-4cbc-82a6-676101009eb3",
      "name": "Think1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ee4fc3a6-bb0f-4e90-902f-7ffee4447e3c",
              "name": "mensaje",
              "value": "={{ $('AI Agent').item.json.output.mensaje_respuesta }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5440,
        1020
      ],
      "id": "c6c89deb-2fe8-4a2f-8e19-7403540454b3",
      "name": "Edit Fields10"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "747854b9-edf9-444a-9ef2-0ecab0d25b80",
              "leftValue": "={{ Object.keys($json.output).length > 0 }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5100,
        1000
      ],
      "id": "b199cea6-e637-4e52-a234-a1a29d0df6b1",
      "name": "If18"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot-evolution",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        140,
        1280
      ],
      "id": "1fd9fecc-42aa-404c-808a-84889a29f200",
      "name": "Webhook",
      "webhookId": "f66502d1-43f5-4649-8d70-d1dffbf4c6d3"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "imagedata64",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1240,
        1180
      ],
      "id": "4dfd93e0-d0b7-4a4e-8376-d93887078e25",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "audio64",
        "options": {
          "fileName": "=file-{{ $now.format('yyyy-MM-dd:dd_HHMMSS') }}.ogg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1240,
        980
      ],
      "id": "15e20dc1-e608-453b-b3b9-2228c57fdc12",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "stickerdata64",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1240,
        1380
      ],
      "id": "d13ba0d5-882a-4735-8ce0-4259f378d9f3",
      "name": "Convert to File2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7600cd39-f566-4fa5-a7e0-b29e05b392bd",
              "leftValue": "={{ $json.body.event }}",
              "rightValue": "messages.upsert",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "fc25c837-936f-44a3-bfe4-d3dd70eceb2a",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        360,
        1280
      ],
      "id": "0bf76e4e-1066-484b-89f5-3ed7cc321e72",
      "name": "If19"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b1373777-68c4-4d3e-8eae-c77269e2163d",
              "name": "Whatsapp_number",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "b3a441af-a709-4998-98ed-887fa21983cd",
              "name": "Whastapp_name",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "c5600e5f-cfd4-466c-baf9-dc42ea14edb1",
              "name": "message_id",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "135da444-8b73-4671-abaf-22e1825ede87",
              "name": "message_type",
              "value": "={{ !!$json.body.data.message.conversation && 'Texto' ||\n   !!$json.body.data.message.audioMessage && 'audio' ||\n   !!$json.body.data.message.imageMessage && 'image' ||\n   !!$json.body.data.message.stickerMessage && 'sticker' }}",
              "type": "string"
            },
            {
              "id": "2797e7c1-0128-4d92-9a62-167b97a8a832",
              "name": "message_receivedDate",
              "value": "={{ DateTime.fromSeconds($json.body.data.messageTimestamp).toISO() }}",
              "type": "string"
            },
            {
              "id": "b10b61c5-c8fa-414a-93fe-c8c0fa35aa7a",
              "name": "apikey",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "7a9960cb-1f18-4c42-835d-4be20219affb",
              "name": "instancia",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        580,
        1180
      ],
      "id": "9efcb0b1-eb7a-4b49-ac62-4d5314dd784f",
      "name": "Edit Fields13"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "Texto",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "077cd860-da61-4973-b37d-2c34d2cf9de9",
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "97b51420-cf22-4718-8256-bd2bd0a3c6e6",
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e46a4113-4b7f-4e4c-a44f-0047f86f6f13",
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "sticker",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sticker"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        800,
        1140
      ],
      "id": "98ddd2d8-3be5-4735-9611-870e93467e47",
      "name": "Switch1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e40758b7-c873-4f70-b434-ba759e533d83",
              "name": "mesagge_content",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        780
      ],
      "id": "3da7d6fc-10f2-4fe1-8d71-3af758ba5b01",
      "name": "Edit Fields14"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0b0e4dd0-d46b-4651-ae91-d13f9e626a5b",
              "name": "Whatsapp_number",
              "value": "={{ $json.Whatsapp_number }}",
              "type": "string"
            },
            {
              "id": "1a27c534-a2c5-400d-88de-d070cd2dd552",
              "name": "Whatsapp_name",
              "value": "={{ $json.Whastapp_name }}",
              "type": "string"
            },
            {
              "id": "910c9e55-ce6b-4af3-b1b4-6768d110765f",
              "name": "message_id",
              "value": "={{ $json.message_id }}",
              "type": "string"
            },
            {
              "id": "099559f5-b30d-44df-a483-c0becb52a129",
              "name": "message_content",
              "value": "={{ $json.mesagge_content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        780
      ],
      "id": "697ca7a6-24a9-4271-ab58-42c7410471bc",
      "name": "Edit Fields15"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1460,
        980
      ],
      "id": "76685ff0-90fe-491e-adfa-91eebbca5a41",
      "name": "OpenAI3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "18b52fda-d39d-4a0d-8b4b-dae73d818de1",
              "name": "imagedata64",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        1180
      ],
      "id": "09474c8b-7349-4087-92c0-4a2817af6705",
      "name": "Edit Fields16"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6c0c61ff-4a2d-436c-ac64-35e63c0a7aa4",
              "name": "audio64",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        980
      ],
      "id": "2f89dd4e-24e3-4659-be86-babb2e7f203d",
      "name": "Edit Fields17"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0b0e4dd0-d46b-4651-ae91-d13f9e626a5b",
              "name": "Whatsapp_number",
              "value": "={{ $('Edit Fields13').item.json.Whatsapp_number }}",
              "type": "string"
            },
            {
              "id": "1a27c534-a2c5-400d-88de-d070cd2dd552",
              "name": "Whatsapp_name",
              "value": "={{ $('Edit Fields13').item.json.Whastapp_name }}",
              "type": "string"
            },
            {
              "id": "910c9e55-ce6b-4af3-b1b4-6768d110765f",
              "name": "message_id",
              "value": "={{ $('Edit Fields13').item.json.message_id }}",
              "type": "string"
            },
            {
              "id": "099559f5-b30d-44df-a483-c0becb52a129",
              "name": "message_content",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        980
      ],
      "id": "dd8d444f-2250-435b-a860-68b041681fda",
      "name": "Edit Fields18"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Eres un asistente virtual, analisa esta imagen. Tu respuesta debe comenzar con: \"Imagen enviada ____\"",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1460,
        1180
      ],
      "id": "90176f07-c8ed-46d2-b01c-91a0eff4b442",
      "name": "OpenAI5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0b0e4dd0-d46b-4651-ae91-d13f9e626a5b",
              "name": "Whatsapp_number",
              "value": "={{ $('Edit Fields13').item.json.Whatsapp_number }}",
              "type": "string"
            },
            {
              "id": "1a27c534-a2c5-400d-88de-d070cd2dd552",
              "name": "Whatsapp_name",
              "value": "={{ $('Edit Fields13').item.json.Whastapp_name }}",
              "type": "string"
            },
            {
              "id": "910c9e55-ce6b-4af3-b1b4-6768d110765f",
              "name": "message_id",
              "value": "={{ $('Edit Fields13').item.json.message_id }}",
              "type": "string"
            },
            {
              "id": "099559f5-b30d-44df-a483-c0becb52a129",
              "name": "message_content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        1180
      ],
      "id": "425ec747-f85f-48f0-8314-2af1954529fb",
      "name": "Edit Fields19"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "18b52fda-d39d-4a0d-8b4b-dae73d818de1",
              "name": "stickerdata64",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        1380
      ],
      "id": "3d94d327-63b7-4e13-b7b5-7560f8532a55",
      "name": "Edit Fields20"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Eres un asistente virtual, analisa esta imagen. Tu respuesta debe comenzar con: \"Sticker enviado ____\"",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1460,
        1380
      ],
      "id": "1412eda7-ce84-43cc-9b01-06070cd14765",
      "name": "OpenAI6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0b0e4dd0-d46b-4651-ae91-d13f9e626a5b",
              "name": "Whatsapp_number",
              "value": "={{ $('Edit Fields13').item.json.Whatsapp_number }}",
              "type": "string"
            },
            {
              "id": "1a27c534-a2c5-400d-88de-d070cd2dd552",
              "name": "Whatsapp_name",
              "value": "={{ $('Edit Fields13').item.json.Whastapp_name }}",
              "type": "string"
            },
            {
              "id": "910c9e55-ce6b-4af3-b1b4-6768d110765f",
              "name": "message_id",
              "value": "={{ $('Edit Fields13').item.json.message_id }}",
              "type": "string"
            },
            {
              "id": "099559f5-b30d-44df-a483-c0becb52a129",
              "name": "message_content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        1380
      ],
      "id": "809a9471-df48-4f2d-bec8-4279edd5fadc",
      "name": "Edit Fields21"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        580,
        1380
      ],
      "id": "a7d375f9-3c6f-4954-87b7-08833e8afdd5",
      "name": "No Operation, do nothing5"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "{{ $json.instancia }}",
        "remoteJid": "={{ $json.Whatsapp_number }}",
        "messageText": "🛑🤖 Lo siento, pero no reconozco este tipo de mensaje. ¿Puedes intentarlo de otra manera? 💬😊",
        "options_message": {
          "delay": 3000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1020,
        1580
      ],
      "id": "e820ae5a-965b-48ea-9c6b-ec51f0c54f88",
      "name": "Evolution API2"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Webhook').item.json.body.instance }}",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ JSON.stringify($('Format Chain').item.json.output.response.part_2).slice(1, -1) }}",
        "options_message": {
          "delay": "={{ $('Format Chain').item.json.output.response.part_2.length * 30 }}",
          "linkPreview": true
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        6820,
        1020
      ],
      "id": "fa49d915-6de7-44ea-89fd-27631cc164ef",
      "name": "Evolution API1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Webhook').item.json.body.instance }}",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ JSON.stringify($('Format Chain').item.json.output.response.part_3).slice(1, -1) }}",
        "options_message": {
          "delay": "={{ $('Format Chain').item.json.output.response.part_3.length * 30 }}",
          "linkPreview": true
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        7480,
        1020
      ],
      "id": "d85e31ac-ff0a-41c1-8726-3421c3b0e472",
      "name": "Evolution API3"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Webhook').item.json.body.instance }}",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ JSON.stringify($('Format Chain').item.json.output.response.part_4).slice(1, -1) }}",
        "options_message": {
          "delay": "={{ $('Format Chain').item.json.output.response.part_4.length * 30 }}",
          "linkPreview": true
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        8140,
        1020
      ],
      "id": "b620f8c6-f96c-4dc3-bac3-9e5f3e9c96e4",
      "name": "Evolution API4"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Webhook').item.json.body.instance }}",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ JSON.stringify($('Format Chain').item.json.output.response.part_5).slice(1, -1) }}",
        "options_message": {
          "delay": "={{ $('Format Chain').item.json.output.response.part_5.length * 30 }}",
          "linkPreview": true
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        8800,
        1020
      ],
      "id": "23cfc4f4-2b3e-4ca3-9b36-53920dbf81de",
      "name": "Evolution API5"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "application/pdf"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        720,
        180
      ],
      "id": "762aa17a-08ac-46e5-b36b-c555b22db545",
      "name": "Google Drive"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        940,
        180
      ],
      "id": "e3510688-f791-4465-8ab2-ef4801d891a0",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "jsCode": "// ✅ 1) Obtener el texto desde la variable de entrada.\n// Si no existe, usamos un string vacío para evitar errores.\nconst text = $json.text || '';\n\n// ✅ 2) Dividir el texto en frases completas.\n// Usamos una expresión regular que detecta puntos, interrogaciones o exclamaciones seguidos de espacios.\n// Esto nos da una lista de frases del texto.\nconst sentences = text.split(/(?<=[.?!])\\s+/);\n\n// ✅ 3) Preparar las variables\nconst chunks = [];         // Aquí guardaremos los bloques finales\nlet currentChunk = [];     // Este array irá acumulando frases\n\n// ✅ 4) Recorremos cada frase del texto\nfor (let i = 0; i < sentences.length; i++) {\n  currentChunk.push(sentences[i]); // Añadimos la frase actual al bloque\n\n  // Si ya tenemos 3 frases o más de 500 caracteres, guardamos este bloque\n  if (currentChunk.length >= 3 || currentChunk.join(\" \").length > 500) {\n    chunks.push({\n      chunk: currentChunk.join(\" \") // Unimos las frases en un solo texto\n    });\n    currentChunk = []; // Empezamos un nuevo bloque\n  }\n}\n\n// ✅ 5) Si queda algún fragmento pendiente al final, también lo añadimos\nif (currentChunk.length) {\n  chunks.push({\n    chunk: currentChunk.join(\" \")\n  });\n}\n\n// ✅ 6) Devolver los bloques (chunks) en el formato que espera n8n\n// Cada uno debe ir dentro de un objeto { json: ... }\nreturn chunks.map(c => ({ json: c }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        180
      ],
      "id": "556abede-bf7b-48d5-9125-1696df8eff72",
      "name": "Semantic Chunker"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1480,
        180
      ],
      "id": "5f82ad9c-7144-4973-980a-ab2caae60766",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aasupabaseaa.vps.rubikmarketing.com.co/rest/v1/documents",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": \"{{ $('Code1').item.json.chunk.replaceAll('\"') }}\",\n  \"metadata\": {\"source\": \"{{ $('Google Drive1').first().json.name }}\",\n\"id_file\": \"{{ $('Google Drive1').first().json.id }}\",\n\"pages\": \"{{ $('Extract from File1').first().json.numpages }}\"},\n  \"embedding\": {{ JSON.stringify($json.data[0].embedding) }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2140,
        180
      ],
      "id": "2c84a9bc-575a-428b-ac39-8c1c25901b86",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/embeddings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "input",
              "value": "={{ $json.chunk }}"
            },
            {
              "name": "model",
              "value": "text-embedding-3-small"
            },
            {
              "name": "encoding_format",
              "value": "float"
            },
            {
              "name": "dimensions",
              "value": "={{1536}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1920,
        180
      ],
      "id": "acefa6f1-9be0-4cd3-a90f-4f58559023b2",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "content": "## SEMANTICA SIN SECCIONES EN METADATA (VELOCIDAD MEDIA)",
        "height": 480,
        "width": 2300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "89452826-bb84-4c58-87a8-c2d3c2da342d",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "jsCode": "// ✅ 1) Creamos una función para limpiar el texto de un chunk\n// Esta función se asegura de que el texto esté limpio, legible y sin caracteres raros\nconst cleanText = (text) => {\n  if (typeof text !== 'string') return ''; // Si no es un texto válido, devolvemos una cadena vacía\n\n  return text\n    .replace(/[\\n\\r\\t]+/g, ' ')              // Elimina saltos de línea, retornos de carro y tabulaciones\n    .replace(/[“”«»‘’]/g, '\"')               // Sustituye comillas raras por comillas normales dobles (\")\n    .replace(/[–—]/g, '-')                   // Reemplaza guiones largos o extraños por guiones estándar\n    .replace(/[•·]/g, '-')                   // Reemplaza bullets por guiones\n    .replace(/\\s{2,}/g, ' ')                 // Reduce múltiples espacios a un solo espacio\n    .trim();                                 // Elimina espacios al principio y al final del texto\n};\n\n// ✅ 2) Recorremos cada item del flujo (normalmente cada uno es un fragmento o \"chunk\")\nreturn items.map(item => {\n  // Limpiamos el campo `chunk` usando la función anterior\n  item.json.chunk = cleanText(item.json.chunk);\n\n  // Devolvemos el item modificado\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1700,
        180
      ],
      "id": "fafa62df-e6ba-49f2-a416-2b60f44a1d4f",
      "name": "Code1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        60,
        180
      ],
      "id": "94a74f5b-0ce9-42c8-abc2-3a60d7675d13",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "driveId": {
            "mode": "list",
            "value": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "value": "1Jf8FaKdtLLWXrDqzwKThdxYa2i7p66kc",
            "mode": "list",
            "cachedResultName": "RAG COMUNIDAD y EMPRESA",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1Jf8FaKdtLLWXrDqzwKThdxYa2i7p66kc"
          },
          "whatToSearch": "files"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        280,
        180
      ],
      "id": "5881c0c5-cf64-4730-8503-97d23fd84191",
      "name": "Google Drive1"
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Google Drive1').first().json.id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1UWud5Q7RVhToeJD4uH0XPjkDLNK7de-E",
          "mode": "list",
          "cachedResultName": "Subidos",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1UWud5Q7RVhToeJD4uH0XPjkDLNK7de-E"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1680,
        0
      ],
      "id": "1438b0c1-9871-400d-956f-7a3435f01146",
      "name": "Google Drive2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        500,
        180
      ],
      "id": "4469c428-bd30-45b7-96fe-daef98156fad",
      "name": "Limit"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "Documents",
        "toolDescription": "Utiliza esta herramienta para obtener información sobre la comunidad y la empresa",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 10,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.2,
      "position": [
        4720,
        1220
      ],
      "id": "9f1340b9-854c-4da3-94ba-488ccb1bbc89",
      "name": "Supabase Vector Store"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        4800,
        1420
      ],
      "id": "914fc6c9-aedf-4726-b83a-4dbf4c632c54",
      "name": "Embeddings OpenAI"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6380,
        1020
      ],
      "id": "ba274612-0918-444d-94b7-6f65a30f82e5",
      "name": "Wait",
      "webhookId": "992212ae-d4a9-4049-af10-6c86113b1f56"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7040,
        1020
      ],
      "id": "c6fbfbe1-39fe-4351-a217-0b1692714490",
      "name": "Wait1",
      "webhookId": "ef189584-a9c1-4bca-bb04-496f31402f9c"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7700,
        1020
      ],
      "id": "59486757-889b-4537-809b-5b927073b40c",
      "name": "Wait2",
      "webhookId": "088389c0-84d8-407e-b5db-a8c887f8d00b"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        8360,
        1020
      ],
      "id": "86ec15b8-fcde-450f-b2af-c49a2982b6eb",
      "name": "Wait3",
      "webhookId": "ca523310-0444-4d09-8bc0-b4615b2887f4"
    },
    {
      "parameters": {
        "content": "## Instagram",
        "height": 700,
        "width": 3620,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5340,
        2120
      ],
      "id": "096659a8-19fb-4a8d-a29e-31780d5b20a9",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST",
          "GET"
        ],
        "path": "mensaje-recibido",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        920,
        2420
      ],
      "id": "c5addb35-7c2f-44b1-a126-d8f58f09cfff",
      "name": "Disparador Instagram",
      "webhookId": "cc6546da-6f16-4546-ada3-e2c83b208997",
      "disabled": true
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1180,
        2520
      ],
      "id": "47cc6b0d-e883-47bf-9fcc-526931ce3ec7",
      "name": "Responder webhook – Instagram (GET)"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "\"EVENT_RECEIVED\"",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1180,
        2340
      ],
      "id": "ff949ecc-7914-47b6-b4a9-52dbd15a8c52",
      "name": "Responder webhook – Instagram (POST)"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26a3553a-f37b-4f46-9a84-3f1661a5d152",
              "name": "trigger",
              "value": "instagram",
              "type": "string"
            },
            {
              "id": "11ae4f49-44ec-4416-a8d2-49a15fdf1e63",
              "name": "texto",
              "value": "={{ $json.body.mensaje }}",
              "type": "string"
            },
            {
              "id": "679e091e-d9dd-4cc3-b5a1-97f3790e09d0",
              "name": "channelId",
              "value": "={{ $json.body.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1740,
        2320
      ],
      "id": "25ca20e8-9549-41e6-a23c-1f8ac683d07f",
      "name": "Editar campos – Instagram"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7dee1826-e2b5-44ea-9c0f-a0adb5bc740c",
              "leftValue": "={{ $json.body.entry[0].messaging[0].message?.is_echo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1400,
        2340
      ],
      "id": "d44e0213-7d6a-488e-9bce-cea68749b4fc",
      "name": "Si no es echo – Instagram"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.instagram.com/v23.0/me/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\":{\n    \"id\":\"{{ $('Edit Fields5').item.json.ID }}\"\n  },\n  \"message\":{\n    \"text\":\"{{ $json.output.response.part_1 }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6180,
        2260
      ],
      "id": "c3e45997-bdfe-46f9-b51c-e69d48410358",
      "name": "Instagram Graph API"
    },
    {
      "parameters": {
        "content": "## INSTAGRAM",
        "height": 520,
        "width": 1000,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        2240
      ],
      "typeVersion": 1,
      "id": "944d3148-9f20-4c3a-aa78-cdd4e9326dd5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $json.channelId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2480,
        2340
      ],
      "id": "ec98b825-9649-443f-a579-b5a2edca153d",
      "name": "Redis"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.channelId }}",
        "messageData": "={{ $json.texto }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2000,
        2340
      ],
      "id": "8b0a7a46-2192-4f38-84f1-39daf42fd337",
      "name": "Redis8"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2260,
        2340
      ],
      "id": "bc6666a9-8840-47be-9821-9ddfaef214b3",
      "name": "Wait7",
      "webhookId": "a8d5702b-2fe2-4f23-bad7-8bf42fe80ee8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8a313a41-eadc-4ada-bc2a-feff79845de9",
              "leftValue": "={{ $json.message[0] }}",
              "rightValue": "={{ $('Editar campos – Instagram').item.json.texto }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2700,
        2340
      ],
      "id": "efd28a9a-cb3a-4c54-9542-a0300b1c2386",
      "name": "If7"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5f82380-4858-4361-908e-98e45c98f092",
              "name": "response",
              "value": "={{ $('Redis').item.json.message.slice().reverse() }}",
              "type": "string"
            },
            {
              "id": "b3db797c-6f2b-4232-8e0c-021bc8e299ca",
              "name": "ID",
              "value": "={{ $('Wait7').item.json.channelId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2920,
        2240
      ],
      "id": "7316596e-4543-4f66-ae7b-f40b88db0bfe",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Wait7').item.json.channelId }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3140,
        2440
      ],
      "id": "b9cab0e2-3e28-4789-9603-fc3e8673277f",
      "name": "Redis10"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2920,
        2440
      ],
      "id": "564307cb-d887-49fa-8d58-d0ea661b66ce",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        3360,
        2240
      ],
      "id": "ceb3f2f0-2221-4044-a531-5f861ba32e3d",
      "name": "Merge1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        5720,
        2480
      ],
      "id": "d3fb328c-df57-4ee6-bb7f-0d58c490381a",
      "name": "Auto-fixing Output Parser1"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"response\": {\n    \"part_1\": \"Responde con la primera parte de la respuesta.\",\n    \"part_2\": \"Responde con la segunda parte de la respuesta.\",\n    \"part_3\": \"Responde con la tercera parte de la respuesta (opcional).\",\n    \"part_4\": \"Responde con la cuarta parte de la respuesta (opcional).\",\n    \"part_5\": \"Responde con la quinta parte de la respuesta (opcional).\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        5880,
        2680
      ],
      "id": "08ce7431-f981-4630-8769-1fc8aff684fb",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Respuesta a formatear:\n{{ $json.mensaje }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=# Tarea  \nTu función principal consiste en crear un JSON que contenga las diferentes partes importantes  del mensaje que vayas a recibir   \nNotas :  \n## debes seguir la siguiente estructura de JSON:  \n{\n  \"response\": {\n    \"part_1\": \"Responde con la primera parte de la respuesta.\",\n    \"part_2\": \"Responde con la segunda parte de la respuesta.\",\n    \"part_3\": \"Responde con la tercera parte de la respuesta (opcional).\",\n    \"part_4\": \"Responde con la cuarta parte de la respuesta (opcional).\",\n    \"part_5\": \"Responde con la quinta parte de la respuesta (opcional).\"\n  }\n}\n## debes dividir los mensajes de una manera que suene bien,  me explico debes analizar que tan largo es el mensaje que recibes y en base en eso dividir el mensaje en las partes que sean necesarias, por ejemplo si el mensaje es breve divídelo en 1 o 2 partes y si el mensaje es extenso divídelo en 3 o 4 partes   \n## las partes que dividas deben tener sentido, no dividas las partes por hacerlo, piensa 2 veces antes de hacerlo"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        5620,
        2260
      ],
      "id": "695020a3-dafe-44ae-a3af-50403f650770",
      "name": "Format Chain1",
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5600,
        2480
      ],
      "id": "39f6fa69-9aed-4736-b33b-937015de74de",
      "name": "OpenAI Chat Model3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5760,
        2680
      ],
      "id": "9fd6c9c3-63c1-4023-93bd-f33bc966ff9b",
      "name": "OpenAI Chat Model4"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{$('If10').item.json.ID}}",
        "tableName": "=n8n_chat_histories_comercial",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4300,
        2500
      ],
      "id": "eee0e76d-314e-45e4-acab-28d87389def7",
      "name": "Postgres Chat Memory1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=contexto: {{ $json.mensaje_usuario }}\nmensaje_del_cliente: {{ $('Merge1').item.json.response }}\nID_cliente: {{ $json.ID }}\ndia actual: {{ $now }}\ndia de la semana: {{ $now.format('cccc') }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=## 🧠 Prompt para Agente de n8n: Comunidad IA Masters Automations + SolutechIA (con Supabase)\n\n---\n\n### 1. Tu Rol y Contexto\n\n**Rol:** Eres un Agente de Atención de la comunidad IA Masters Automations y embajador informativo de SolutechIA.  \n**Contexto:** Ayudarás a los usuarios que escriben por WhatsApp o mensajes directos, brindándoles información clara y motivadora sobre la comunidad y los servicios de SolutechIA. El objetivo principal es que si tienen dudas sobre la comunidad les respondas y siempre les invites a probarla ya que tienen 7 dias gratis de prueba. Y si contactan porque necesitan o quieren automatizar su negocio o empresa, es decir contrarar el servicio, el objetivo es que nos dejen la información en la pagina web para agendar una reunion con nosotros.\n\nAdemás, tienes acceso a una **base de datos vectorizada alojada en Supabase**, que contiene toda la información actualizada sobre la comunidad IA Masters Automations y los servicios/productos de SolutechIA. Consulta esta base para responder con precisión cada pregunta.\n\n---\n\n### 2. Responsabilidades y Tareas Clave\n\n- ✅ Consulta la base de datos vectorizada antes de generar una respuesta para asegurar que la información sea precisa y actualizada.\n- Si el usuario pregunta sobre **SolutechIA**, explica qué servicios ofrece, cómo acceder al CRM, solicitar presupuesto o agendar una reunión, y comparte los enlaces necesarios.\n- Si el usuario pregunta sobre la **comunidad IA Masters Automations**, explica los niveles, beneficios, clases, cursos y automatizaciones disponibles. También puedes guiarlo para comenzar, recomendar contenido o resolver dudas comunes sobre el funcionamiento de la comunidad.\n- Si la pregunta no es clara, responde con una actitud amigable y pide más detalles para poder ayudar mejor.\n\n---\n\n### 3. Expectativa de Entrada\n\nRecibirás solicitudes escritas en lenguaje natural, como:\n\n- “¿Qué es SolutechIA?”\n- “¿Cómo puedo acceder al contenido exclusivo de la comunidad?”\n- “¿Qué beneficios tiene el nivel Camaleón Verde?”\n- “¿Tienen clases para aprender N8N?”\n\n---\n\n### 4. Herramientas Disponibles\n\n- ✅ Base de datos vectorizada en Supabase con embeddings de documentos, clases, niveles y recursos.\n- ❌ No usas herramientas externas ni consultas webs públicas directamente.\n\n---\n\n### 5. Estilo y Tono de Conversación\n\nUsa un tono **motivador, entusiasta, informal y cercano**.  \nHaz que el usuario se sienta acompañado por una comunidad proactiva.  \nEjemplo:  \n> ¡Súper buena pregunta! 💡 Te cuento todo lo que necesitas saber sobre ese nivel y cómo empezar 👉 [enlace]\n\n---\n\n### 6. Formato y Salida Esperada\n\n- Optimiza para WhatsApp y DMs.\n- Usa emojis para dar energía y cercanía.\n- Incluye enlaces clicables cuando corresponda.\n- Mantén una estructura conversacional.\n- Si la solicitud es ambigua, pide más detalles antes de recomendar algo específico.\n\n---\n\n### 7. Consulta de Datos\n\nAntes de responder, si es necesario, haz lo siguiente:\n\n> 🔎 **Consulta la base de datos vectorizada de Supabase**. Busca el fragmento de texto más relevante al mensaje del usuario.  \n> Asegúrate de que la respuesta esté basada en los resultados recuperados. Si no hay un match claro, responde con base en los datos integrados de este prompt.\n\n---\n\n### 8. Instrucciones de Calidad y Validación\n\n- La respuesta debe:\n  - ✅ Resolver la intención con precisión y empatía\n  - ✅ Tener mínimo 6 emojis\n  - ✅ Incluir enlaces cuando aplique\n  - ✅ Usar estructura fluida tipo conversación\n  - ✅ Consultar Supabase si es posible\n  - ❌ No repetir información innecesaria\n  - ❌ No dar precios ni condiciones económicas\n\n---\n\n### ❌ Prohibiciones\n\n- ❌ Nunca mencionar precios.\n- ❌ Nunca improvisar si no hay datos.\n- ❌ Nunca asumir qué incluye una suscripción sin confirmación.\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        4280,
        2280
      ],
      "id": "5dab8bf9-fc9b-4d5a-8ec5-611aa433b460",
      "name": "AI Agent1",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "content": "## 🧙‍♂️ El agente IA hace su magia",
        "height": 680,
        "width": 1540,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3720,
        2140
      ],
      "typeVersion": 1,
      "id": "a2b63570-d002-4bb1-a087-370dbbaa4cb4",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"mensaje_respuesta\": { \"type\": \"string\" },\n    \"producto_detectado\": { \"type\": \"string\" },\n    \"agente_destino\": { \"type\": \"string\" },\n    \"cliente_nombre\": { \"type\": \"string\" },\n    \"producto_solicitado\": { \"type\": \"string\" },\n    \"precio_total\": { \"type\": \"string\" },\n    \"direccion_confirmada\": { \"type\": \"string\" },\n    \"ciudad_confirmada\": { \"type\": \"string\" },\n    \"departamento_confirmado\": { \"type\": \"string\" },\n    \"medio_pago_seleccionado\": { \"type\": \"string\" },\n    \"tipo_conversacion\": { \"type\": \"string\" },\n    \"prefiere_voz\": { \"type\": \"string\" },\n    \"url_imagen\": { \"type\": \"string\" },\n    \"imagen\": { \"type\": \"boolean\" },\n    \"cliente_compro_en_esta_conversacion\": { \"type\": \"boolean\" }\n  },\n  \"required\": [\n    \"mensaje_respuesta\",\n    \"producto_detectado\",\n    \"agente_destino\",\n    \"cliente_nombre\",\n    \"producto_solicitado\",\n    \"precio_total\",\n    \"direccion_confirmada\",\n    \"ciudad_confirmada\",\n    \"departamento_confirmado\",\n    \"medio_pago_seleccionado\",\n    \"tipo_conversacion\",\n    \"prefiere_voz\",\n    \"url_imagen\",\n    \"imagen\",\n    \"cliente_compro_en_esta_conversacion\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        4940,
        2500
      ],
      "id": "72158dad-b77a-4e73-a4d3-b8ac7941953c",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "jsCode": "const minutes = $json.minutes_since_last_message;\nlet mensaje = '';\n\nif (minutes > 60) {\n  mensaje = `Hace ${Math.floor(minutes / 60)} horas que el usuario no escribía.`;\n} else if (minutes > 5) {\n  mensaje = `El usuario vuelve luego de ${minutes} minutos.`;\n} else {\n  mensaje = `El usuario continúa la conversación activa.`;\n}\n\nreturn [\n  {\n    json: {\n      mensaje_usuario: mensaje\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3960,
        2280
      ],
      "id": "20a84ae5-784b-469f-ab2f-718c2256c566",
      "name": "Code2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0c562218-3c6e-4775-b07d-18de456a5c19",
              "leftValue": "={{!!$json.creado}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3740,
        2280
      ],
      "id": "d418141a-a5fa-4536-b2d5-0bbc61dd4e38",
      "name": "If10"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "764724e1-bf14-459b-bb97-70b999718c99",
              "name": "mensaje_usuario",
              "value": "Nueva conversación",
              "type": "string"
            },
            {
              "id": "5dc57e7c-35f5-4a74-b3ce-05c3b4a33854",
              "name": "ID",
              "value": "={{ $('Wait7').item.json.channelId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3960,
        2480
      ],
      "id": "6cd1b24f-3570-48fc-a8a8-904904c4adff",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4180,
        2500
      ],
      "id": "72037de1-11e2-4946-b92a-1ab86d79a9e3",
      "name": "OpenAI Chat Model5"
    },
    {
      "parameters": {
        "description": "=## 🧠 Prompt para el nodo Think (modo validador)\n\nTu función es actuar como una capa de pensamiento lógico y crítica antes de enviar la respuesta del agente. Siempre debes tomarte tu tiempo para razonar.\n\n- ❌ Nunca se puede inventar un precio.\n- ❌ No se puede suponer que un producto o servicio\n- ❌ No se puede decir \"te hago descuento\", \"te dejo en tanto\".\n\n---\n\n### ✅ Validar que:\n\n- La respuesta conteste con claridad, calidez y precisión a la intención del cliente.\n- Tenga mínimo **6 emojis bien distribuidos** (saludo, desarrollo, cierre).\n- No repita datos innecesarios.\n- Sea coherente con lo que el cliente pidió.\n- Mantenga el tono afectuoso y profesional característico del agente.\n\n---\n\n### 📤 Formato de salida (obligatorio):\n\nDevuelve siempre un JSON con esta estructura y nada más:\n\n{\n  \"valido\": true,\n  \"comentario\": \"Explicación breve del por qué es válido o qué debe corregirse.\"\n}\n\n📌 Si detectas cualquier error (tono, contenido, coherencia, emojis insuficientes, promesas indebidas, ingredientes no confirmados), devuelve `\"valido\": false` y explica por qué brevemente.\n\n🚫 No devuelvas el mensaje validado. No repitas el contenido. Solo responde con el JSON indicado.\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        4420,
        2500
      ],
      "id": "d6f706cd-9080-4487-845b-472ecdbc4b5e",
      "name": "Think"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ee4fc3a6-bb0f-4e90-902f-7ffee4447e3c",
              "name": "mensaje",
              "value": "={{ $('AI Agent1').item.json.output.mensaje_respuesta }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5340,
        2260
      ],
      "id": "dac0f032-1e15-42f4-85e6-00e20e166ffc",
      "name": "Edit Fields11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "747854b9-edf9-444a-9ef2-0ecab0d25b80",
              "leftValue": "={{ Object.keys($json.output).length > 0 }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4740,
        2280
      ],
      "id": "48b5bcbb-6db8-4a45-9b5e-f482804983fd",
      "name": "If20"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "Documents",
        "toolDescription": "Utiliza esta herramienta para obtener información sobre la comunidad y la empresa",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 10,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.2,
      "position": [
        4560,
        2500
      ],
      "id": "c97abae2-ea3a-401a-b12e-07950f4bc3aa",
      "name": "Supabase Vector Store1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        4620,
        2660
      ],
      "id": "f6a2b764-e56b-4fc7-9744-df7f1068e726",
      "name": "Embeddings OpenAI1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6400,
        2260
      ],
      "id": "76a3ec5e-e6ce-4da7-be59-fb278997bf02",
      "name": "Wait4",
      "webhookId": "c548b611-3b60-4191-b212-c6d0ce14e71e"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34ff5c50-b6e6-4ecb-bbee-c0d49f0eb56c",
              "leftValue": "={{ $json.output.response.part_2 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6620,
        2400
      ],
      "id": "4f28b9ac-e5eb-4fc5-99bc-ee1b2a1eb20c",
      "name": "If4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.instagram.com/v23.0/me/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\":{\n    \"id\":\"{{ $('Edit Fields5').item.json.ID }}\"\n  },\n  \"message\":{\n    \"text\":\"{{ $json.output.response.part_2 }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6820,
        2260
      ],
      "id": "9e2263c7-4eac-4e3b-8b56-a0c9e8cafda9",
      "name": "Instagram Graph API1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7040,
        2260
      ],
      "id": "8f6ed5cd-4710-4728-bfef-54b9f7b8e523",
      "name": "Wait5",
      "webhookId": "3241480b-0115-4f93-91f3-8c9e31e91059"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34ff5c50-b6e6-4ecb-bbee-c0d49f0eb56c",
              "leftValue": "={{ $json.output.response.part_3 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7240,
        2420
      ],
      "id": "5e7ce1d5-313d-485d-88de-7c6d8f99f878",
      "name": "If8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.instagram.com/v23.0/me/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\":{\n    \"id\":\"{{ $('Edit Fields5').item.json.ID }}\"\n  },\n  \"message\":{\n    \"text\":\"{{ $json.output.response.part_3 }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7440,
        2260
      ],
      "id": "a3eb097b-ab7b-4de9-af60-fa143bd18360",
      "name": "Instagram Graph API2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7660,
        2260
      ],
      "id": "9d92de7f-ec76-4b9a-b84e-2de55737d9ea",
      "name": "Wait8",
      "webhookId": "3241480b-0115-4f93-91f3-8c9e31e91059"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34ff5c50-b6e6-4ecb-bbee-c0d49f0eb56c",
              "leftValue": "={{ $json.output.response.part_4 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7800,
        2420
      ],
      "id": "7cc55c6d-a5a1-4e1f-b0f1-0834624be096",
      "name": "If11"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.instagram.com/v23.0/me/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\":{\n    \"id\":\"{{ $('Edit Fields5').item.json.ID }}\"\n  },\n  \"message\":{\n    \"text\":\"{{ $json.output.response.part_4 }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7980,
        2280
      ],
      "id": "707265a9-7ebb-42f7-ac25-4b25e6600cac",
      "name": "Instagram Graph API3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        8200,
        2280
      ],
      "id": "4d066012-7694-443a-965d-da9e3c1d66df",
      "name": "Wait9",
      "webhookId": "3241480b-0115-4f93-91f3-8c9e31e91059"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34ff5c50-b6e6-4ecb-bbee-c0d49f0eb56c",
              "leftValue": "={{ $json.output.response.part_5 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8380,
        2440
      ],
      "id": "35126a51-221d-4884-80bb-2819ec18664d",
      "name": "If12"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.instagram.com/v23.0/me/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\":{\n    \"id\":\"{{ $('Edit Fields5').item.json.ID }}\"\n  },\n  \"message\":{\n    \"text\":\"{{ $json.output.response.part_5 }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8560,
        2300
      ],
      "id": "173b9b2a-1e0d-427a-af71-ab9fee5de232",
      "name": "Instagram Graph API4"
    },
    {
      "parameters": {
        "content": "## Recopilamos mensajes en (x) intervalo de tiempo",
        "height": 680,
        "width": 1740,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1920,
        2140
      ],
      "typeVersion": 1,
      "id": "09eed19e-fec4-4deb-a0fa-62ac4c805b89",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_historial_bot",
          "mode": "list",
          "cachedResultName": "n8n_chat_historial_bot"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $json.phone }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3400,
        1040
      ],
      "id": "52106fb2-8930-4b51-94c3-9c0747040b84",
      "name": "Postgres"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_historial_bot",
          "mode": "list",
          "cachedResultName": "n8n_chat_historial_bot"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('Wait7').item.json.channelId }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3140,
        2220
      ],
      "id": "2a0e3e1e-f93a-4c99-be0e-584dfc4973fd",
      "name": "Postgres1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Webhook').item.json.body.instance }}",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $json.output.response.part_1 }}",
        "options_message": {
          "linkPreview": true
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        6160,
        1020
      ],
      "id": "6d752569-ac47-416b-8c4b-66c64dffd7e0",
      "name": "Enviar texto"
    }
  ],
  "pinData": {
    "Disparador Instagram": [
      {
        "json": {
          "headers": {
            "host": "aawebhookaa.vps.rubikmarketing.com.co",
            "user-agent": "axios/0.21.4",
            "content-length": "188",
            "accept": "application/json, text/plain, */*",
            "content-type": "application/json",
            "x-forwarded-for": "34.10.70.101",
            "x-forwarded-host": "aawebhookaa.vps.rubikmarketing.com.co",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "f75c220e25da",
            "x-real-ip": "34.10.70.101",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "id": "LaTc08h0QMiiA6ZB0jjr",
            "name": "Angel Aparicio Aparicio",
            "email": "angel.aparicio92@gmail.com",
            "phone": "722 41 82 42",
            "mensaje": "Hey, que me puedes decir de la academia?",
            "adjunto": []
          },
          "webhookUrl": "https://aawebhookaa.vps.rubikmarketing.com.co/webhook/mensaje-recibido",
          "executionMode": "production"
        }
      }
    ],
    "Format Chain1": [
      {
        "json": {
          "output": {
            "response": {
              "part_1": "¡Genial que preguntes por la academia! 🤩🚀 Te cuento: IA Masters Automations es una comunidad donde aprenderás a dominar las automatizaciones con inteligencia artificial desde cero, con acceso a cursos, talleres en vivo, recursos exclusivos y un montón de trucos para optimizar tus procesos 💡🤖.",
              "part_2": "Desde el primer día tienes acceso a automatizaciones listas para usar, masterclasses grabadas, talleres de co-creación y tips súper útiles 🎓✨. Además, al participar, tu camaleón va cambiando de color y desbloqueas nuevos beneficios y cursos especiales 🦎🎯.",
              "part_3": "¡Y lo mejor! Puedes probar la comunidad GRATIS por 7 días para que explores todo el contenido y vivas la experiencia sin compromiso 😍🙌.",
              "part_4": "¿Te gustaría que te pase el enlace para registrarte y empezar ya? 😉"
            }
          }
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "aawebhookaa.vps.rubikmarketing.com.co",
            "user-agent": "axios/1.7.9",
            "content-length": "931",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "aawebhookaa.vps.rubikmarketing.com.co",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "f75c220e25da",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Prueba",
            "data": {
              "key": {
                "remoteJid": "34722418242@s.whatsapp.net",
                "fromMe": false,
                "id": "3A1EEC8714BBFA57D00F"
              },
              "pushName": "AA",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "Cuanto costaria una automatizacion?",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "mxtlgDL+5PEgeg==",
                    "senderTimestamp": "1750862621",
                    "recipientKeyHash": "BBTIsqr6T8Sy0A==",
                    "recipientTimestamp": "1750088861"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "DGXdU4v41ya334yGOM9FRPCRYwqC4PX2fHh9r0VRuVc="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1751318011,
              "instanceId": "0e656b40-9922-4ca5-8387-45641679d455",
              "source": "ios"
            },
            "destination": "https://aawebhookaa.vps.rubikmarketing.com.co/webhook/chatbot-evolution",
            "date_time": "2025-06-30T18:13:31.383Z",
            "sender": "34722324719@s.whatsapp.net",
            "server_url": "https://aaevolutionaa.vps.rubikmarketing.com.co",
            "apikey": "F04C6F68FF89-42FB-90F4-F427B7FD1C8C"
          },
          "webhookUrl": "https://aawebhookaa.vps.rubikmarketing.com.co/webhook/chatbot-evolution",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-03T19:41:20.000Z",
  "versionId": "4423841b-1cb8-4dcd-aeab-d6c60f8f7b3a"
}